"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const otp_service_1 = __importDefault(require("./otp.service"));
const bcrypt_service_1 = __importDefault(require("./bcrypt.service"));
const user_service_1 = __importDefault(require("./user.service"));
const notificaton_email_1 = __importDefault(require("../utils/notificaton.email"));
const emailTemplate_1 = __importDefault(require("../templates/emailTemplate"));
const otp_genrate_1 = __importDefault(require("../utils/otp.genrate"));
const token_service_1 = __importDefault(require("./token.service"));
const network_service_1 = __importDefault(require("./network.service"));
const jwt_service_1 = __importDefault(require("./jwt.service"));
const kyc_service_1 = __importDefault(require("./kyc.service"));
const multer_1 = __importDefault(require("../utils/multer"));
const assets_service_1 = __importDefault(require("./assets.service"));
const staking_service_1 = __importDefault(require("./staking.service"));
const p_method_service_1 = __importDefault(require("./p_method.service"));
const adspost_service_1 = __importDefault(require("./adspost.service"));
const p2porder_service_1 = __importDefault(require("./p2porder.service"));
const tokenlisting_service_1 = __importDefault(require("./tokenlisting.service"));
const market_service_1 = __importDefault(require("./market.service"));
const chat_service_1 = __importDefault(require("./chat.service"));
const wallet_service_1 = __importDefault(require("../blockchain/wallet.service"));
const wallet_service_2 = __importDefault(require("./wallet.service"));
const withdraw_service_1 = __importDefault(require("./withdraw.service"));
const profile_service_1 = __importDefault(require("./profile.service"));
const referal_service_1 = __importDefault(require("./referal.service"));
const deposit_service_1 = __importDefault(require("./deposit.service"));
const convert_service_1 = __importDefault(require("./convert.service"));
const tradepair_service_1 = __importDefault(require("./tradepair.service"));
const filereadwrite_service_1 = __importDefault(require("./filereadwrite.service"));
const user_notification_service_1 = __importDefault(require("./user_notification.service"));
const site_service_1 = __importDefault(require("./site.service"));
const futurepair_service_1 = __importDefault(require("./futurepair.service"));
const futurePosition_service_1 = __importDefault(require("./futurePosition.service"));
const futureOpenOrder_service_1 = __importDefault(require("./futureOpenOrder.service"));
const watchlist_service_1 = __importDefault(require("./watchlist.service"));
const scanner_service_1 = __importDefault(require("./scanner.service"));
const referProgram_service_1 = __importDefault(require("./referProgram.service"));
class service {
    otpService = new otp_service_1.default();
    bcypt = new bcrypt_service_1.default();
    user = new user_service_1.default();
    emailService = new notificaton_email_1.default();
    emailTemplate = new emailTemplate_1.default();
    otpGenerate = new otp_genrate_1.default();
    jwt = new jwt_service_1.default();
    token = new token_service_1.default();
    network = new network_service_1.default();
    kyc = new kyc_service_1.default();
    upload = new multer_1.default();
    assets = new assets_service_1.default();
    staking = new staking_service_1.default();
    p_method = new p_method_service_1.default();
    ads = new adspost_service_1.default();
    p2p = new p2porder_service_1.default();
    token_list = new tokenlisting_service_1.default();
    market = new market_service_1.default();
    chat = new chat_service_1.default();
    walletService = new wallet_service_1.default();
    userWalletServices = new wallet_service_2.default();
    withdrawServices = new withdraw_service_1.default();
    referalService = new referal_service_1.default();
    profile = new profile_service_1.default();
    depositServices = new deposit_service_1.default();
    convert = new convert_service_1.default();
    pairServices = new tradepair_service_1.default();
    jsonFileReadWrite = new filereadwrite_service_1.default();
    notify = new user_notification_service_1.default();
    site = new site_service_1.default();
    future = new futurepair_service_1.default();
    position = new futurePosition_service_1.default();
    openorder = new futureOpenOrder_service_1.default();
    watchlist = new watchlist_service_1.default();
    scan = new scanner_service_1.default();
    refer = new referProgram_service_1.default();
}
exports.default = new service();
