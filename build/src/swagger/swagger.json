{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Crypto Exchnage Backend",
        "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs using TypeScript",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "/",
            "description": "Local Dev, or from Heroku"
        },
        {
            "url": "/tmbexchange/",
            "description": "With docker-compose and nginx proxy"
        }
    ],
    "tags": [
        {
            "name": "Exchange",
            "description": "API for cats in the system"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/user/admin/userList": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Admin / Superadmin can access",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/withdraw/admin/withdrawList": {
            "get": {
                "tags": [
                    "Withdraw"
                ],
                "summary": "Admin / Superadmin can access",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login user if exist in system",
                "requestBody": {
                    "description": "otp empty when you try first attempt",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Login"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Create a new user in system",
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Register"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/user/exist": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Create a new user in system",
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Exist"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/otp/otp-verification": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Otp verification",
                "requestBody": {
                    "description": "OTP Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Otp"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/token": {
            "get": {
                "tags": [
                    "Token"
                ],
                "summary": "Get all token list",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/token/create": {
            "post": {
                "tags": [
                    "Token"
                ],
                "summary": "Create a new token in system",
                "requestBody": {
                    "description": "Token Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Token"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/network/create": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Create a new user in system",
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Network"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/kyc/create": {
            "post": {
                "tags": [
                    "Kyc"
                ],
                "summary": "Create a new user KYC in system",
                "requestBody": {
                    "description": "KYC Object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/definitions/Kyc"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/kyc/kycstatus": {
            "put": {
                "tags": [
                    "Kyc"
                ],
                "summary": "Kyc status update",
                "requestBody": {
                    "description": "KYC Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Kycstatus"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/kyc/{id}": {
            "get": {
                "tags": [
                    "Kyc"
                ],
                "summary": "Kyc by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "The user ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/kyc/all/{type}": {
            "get": {
                "tags": [
                    "Kyc"
                ],
                "summary": "Kyc by type",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": false,
                        "type": "string",
                        "default": "All",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "All",
                                "Pending",
                                "Approved",
                                "Rejected"
                            ]
                        },
                        "description": "Get all kyc by type"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/assets/create": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create a new user Assets in system",
                "requestBody": {
                    "description": "assets Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/asset"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/assets/wallettransfer": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Wallet to Wallet transfer assets",
                "requestBody": {
                    "description": "assets Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/assetwallet"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/assets/overview/{userid}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "assets by user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userid",
                        "required": true,
                        "type": "string",
                        "description": "user ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/assets": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "assets by user id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/assets/history/{userid}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Wallet to Wallet transfer history by user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userid",
                        "required": true,
                        "type": "string",
                        "description": "user ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/staking/create": {
            "post": {
                "tags": [
                    "Staking"
                ],
                "summary": "Create a new user staking in system",
                "requestBody": {
                    "description": "staking object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/staking"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/staking/all": {
            "get": {
                "tags": [
                    "Staking"
                ],
                "summary": "Get all staking data",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/staking/getbytoken/{tokenid}/{userid}": {
            "get": {
                "tags": [
                    "Staking"
                ],
                "summary": "Get staking record by token id and user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tokenid",
                        "required": true,
                        "type": "string",
                        "description": "token ID"
                    },
                    {
                        "in": "path",
                        "name": "userid",
                        "required": true,
                        "type": "string",
                        "description": "user ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/staking/release/{id}": {
            "put": {
                "tags": [
                    "Staking"
                ],
                "summary": "Staking realese assets update",
                "requestBody": {
                    "description": "Staking Id",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/stakingrelease"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/payment/save": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Create new master payment method",
                "requestBody": {
                    "description": "payment Object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/definitions/p_method"
                            },
                            "encoding": {
                                "fields": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/payment/list": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Master Payment Method List",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/payment/method/{id}": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Payment Method by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Payment Method ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/payment/addmethod": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Add user payment method",
                "requestBody": {
                    "description": "payment Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/user_pmethod"
                            },
                            "encoding": {
                                "fields": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/payment/get-method/{id}": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "User Payment Method by user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "user Payment Method user ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/payment/delete-method/{id}": {
            "delete": {
                "tags": [
                    "Payment"
                ],
                "summary": "Delete User Payment Method by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Delete User Payment Method by id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/post/create": {
            "post": {
                "tags": [
                    "Ads"
                ],
                "summary": "Create user Ads post to sell assets",
                "requestBody": {
                    "description": "ads Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ads_method"
                            },
                            "encoding": {
                                "fields": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/post/get/{userid}": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Get user post ads by user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userid",
                        "required": true,
                        "type": "string",
                        "description": "user ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/post/all": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Get all post ads",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/post/delete/{postid}/{userid}": {
            "delete": {
                "tags": [
                    "Ads"
                ],
                "summary": "delete post ads by post id and user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "postid",
                        "required": true,
                        "type": "string",
                        "description": "Post ID"
                    },
                    {
                        "in": "path",
                        "name": "userid",
                        "required": true,
                        "type": "string",
                        "description": "user ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/p2p/create": {
            "post": {
                "tags": [
                    "P2P Order"
                ],
                "summary": "Create P2P Order",
                "requestBody": {
                    "description": "Order Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/p2p"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/p2p/cancel": {
            "put": {
                "tags": [
                    "P2P Order"
                ],
                "summary": "Create P2P Order",
                "requestBody": {
                    "description": "Order Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/p2p_cancel"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/p2p/update": {
            "put": {
                "tags": [
                    "P2P Order"
                ],
                "summary": "Create P2P Order",
                "requestBody": {
                    "description": "Order Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/p2p_update"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/p2p/release": {
            "post": {
                "tags": [
                    "P2P Order"
                ],
                "summary": "Release P2P Order",
                "requestBody": {
                    "description": "Order Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/p2p_release"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/p2p/order/{orderid}": {
            "get": {
                "tags": [
                    "P2P Order"
                ],
                "summary": "Get order by order id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "orderid",
                        "required": true,
                        "type": "string",
                        "description": "Order ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/p2p/all/{userid}": {
            "get": {
                "tags": [
                    "P2P Order"
                ],
                "summary": "Get order list by user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userid",
                        "required": true,
                        "type": "string",
                        "description": "user ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/user/password": {
            "put": {
                "tags": [
                    "Setting"
                ],
                "summary": "Update Password",
                "requestBody": {
                    "description": "password Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/pwd_update"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/user/fundcode": {
            "put": {
                "tags": [
                    "Setting"
                ],
                "summary": "Update fundcode",
                "requestBody": {
                    "description": "fundcode Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/pwd_update"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/token/token_list/create": {
            "post": {
                "tags": [
                    "Token"
                ],
                "summary": "Token Listing by user",
                "requestBody": {
                    "description": "token Object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/definitions/token_list"
                            },
                            "encoding": {
                                "network": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/token/list": {
            "get": {
                "tags": [
                    "Token"
                ],
                "summary": "Get token List listed by user",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad get data."
                    }
                }
            }
        },
        "/market/create": {
            "post": {
                "tags": [
                    "Market"
                ],
                "summary": "Create Market Order",
                "requestBody": {
                    "description": "market Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/market"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/market/order/list": {
            "get": {
                "tags": [
                    "Market"
                ],
                "summary": "Get Market Order list",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/market/{token}": {
            "get": {
                "tags": [
                    "Market"
                ],
                "summary": "Get Market Order list by token id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "token ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/market/getOrder/{token}/{userid}": {
            "get": {
                "tags": [
                    "Market"
                ],
                "summary": "Get Market Order list by token id and user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "type": "string",
                        "description": "token ID"
                    },
                    {
                        "in": "path",
                        "name": "userid",
                        "required": true,
                        "type": "string",
                        "description": "User ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/market/cancel": {
            "put": {
                "tags": [
                    "Market"
                ],
                "summary": "Cancel Market Order",
                "requestBody": {
                    "description": "market Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/market_cancel"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/market/trasfer/cron": {
            "put": {
                "tags": [
                    "Market"
                ],
                "summary": "Cron Market Order",
                "requestBody": {
                    "description": "market Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/market_cron"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/chat/create": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Create P2P order chat",
                "requestBody": {
                    "description": "chat Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/chat"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/cats/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the cat that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Cats"
                ],
                "summary": "Get cat with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Cat with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            },
            "put": {
                "summary": "Update cat with given ID",
                "tags": [
                    "Cats"
                ],
                "requestBody": {
                    "description": "Cat Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Cat"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Cat with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete cat with given ID",
                "tags": [
                    "Cats"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Cat with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "Register": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "confirmPassword": {
                    "type": "boolean"
                },
                "termAndCondition": {
                    "type": "string"
                }
            }
        },
        "Exist": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "confirmPassword": {
                    "type": "string"
                }
            }
        },
        "Token": {
            "type": "object",
            "properties": {
                "symbol": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "minimum_withdraw": {
                    "type": "number"
                },
                "decimals": {
                    "type": "number"
                },
                "tokenType": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "networks": {
                    "type": "object"
                },
                "price": {
                    "type": "number"
                },
                "min_price": {
                    "type": "number"
                },
                "max_price": {
                    "type": "number"
                },
                "type": {
                    "type": "boolean"
                }
            }
        },
        "Network": {
            "type": "object",
            "properties": {
                "symbol": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "chainId": {
                    "type": "string"
                },
                "walletSupport": {
                    "type": "string"
                },
                "BlockExplorerURL": {
                    "type": "string"
                },
                "rpcUrl": {
                    "type": "string"
                }
            }
        },
        "Login": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "Otp": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "Kyc": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "fname": {
                    "type": "string"
                },
                "doctype": {
                    "type": "string"
                },
                "docnumber": {
                    "type": "string"
                },
                "idfront": {
                    "type": "string",
                    "format": "binary"
                },
                "idback": {
                    "type": "string",
                    "format": "binary"
                },
                "statement": {
                    "type": "string",
                    "format": "binary"
                },
                "dob": {
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "asset": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "account_type": {
                    "type": "string"
                },
                "walletTtype": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                }
            }
        },
        "assetwallet": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                }
            }
        },
        "staking": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "apr": {
                    "type": "number"
                },
                "time_log": {
                    "type": "number"
                },
                "time_format": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "queue": {
                    "type": "boolean"
                },
                "redeem": {
                    "type": "boolean"
                }
            }
        },
        "stakingrelease": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "p_method": {
            "type": "object",
            "properties": {
                "payment_method": {
                    "type": "string"
                },
                "icon": {
                    "type": "string",
                    "format": "binary"
                },
                "region": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "label": {
                                "type": "string"
                            },
                            "required": {
                                "type": "string"
                            },
                            "ifoptional": {
                                "type": "string"
                            },
                            "placeholder": {
                                "type": "string"
                            },
                            "err_msg": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "user_pmethod": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "pmid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "pm_name": {
                    "type": "string"
                },
                "pmObject": {
                    "type": "object"
                }
            }
        },
        "ads_method": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "number"
                },
                "min_limit": {
                    "type": "number"
                },
                "max_limit": {
                    "type": "number"
                },
                "p_method": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "upm_id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "payment_time": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "checked": {
                    "type": "boolean",
                    "default": false
                },
                "status": {
                    "type": "boolean",
                    "default": false
                },
                "fundcode": {
                    "type": "string"
                }
            }
        },
        "p2p": {
            "type": "object",
            "properties": {
                "post_id": {
                    "type": "string"
                },
                "sell_user_id": {
                    "type": "string"
                },
                "buy_user_id": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "number"
                },
                "spend_amount": {
                    "type": "number"
                },
                "receive_amount": {
                    "type": "number"
                },
                "spend_currency": {
                    "type": "string"
                },
                "receive_currency": {
                    "type": "string"
                },
                "p_method": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "p2p_cancel": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "p2p_update": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                }
            }
        },
        "p2p_release": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "fundcode": {
                    "type": "string"
                }
            }
        },
        "pwd_update": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "token_list": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "logo": {
                    "type": "string",
                    "format": "binary"
                },
                "issue_price": {
                    "type": "number"
                },
                "issue_date": {
                    "type": "string",
                    "format": "date"
                },
                "decimals": {
                    "type": "number"
                },
                "fees": {
                    "type": "number"
                },
                "max_supply": {
                    "type": "number"
                },
                "circulating_supply": {
                    "type": "number"
                },
                "explore_link": {
                    "type": "string"
                },
                "white_pp_link": {
                    "type": "string"
                },
                "website_link": {
                    "type": "string"
                },
                "introduction": {
                    "type": "string"
                },
                "network": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "contract": {
                                "type": "string"
                            }
                        }
                    }
                },
                "status": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "market": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "market_type": {
                    "type": "string",
                    "enum": [
                        "Limit",
                        "Market"
                    ]
                },
                "order_type": {
                    "type": "string"
                },
                "limit_usdt": {
                    "type": "number"
                },
                "volume_usdt": {
                    "type": "number"
                },
                "token_amount": {
                    "type": "number"
                },
                "status": {
                    "type": "boolean"
                },
                "isCanceled": {
                    "type": "boolean"
                },
                "queue": {
                    "type": "boolean"
                }
            }
        },
        "market_cancel": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                }
            }
        },
        "market_cron": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "order_type": {
                    "type": "string"
                }
            }
        },
        "chat": {
            "type": "object",
            "properties": {
                "post_id": {
                    "type": "string"
                },
                "sell_user_id": {
                    "type": "string"
                },
                "buy_user_id": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "orderid": {
                    "type": "string"
                },
                "chat": {
                    "type": "string"
                }
            }
        },
        "Cats": {
            "type": "object",
            "properties": {
                "cats": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Cat"
                    }
                }
            }
        }
    }
}
