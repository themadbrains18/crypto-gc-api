name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Bun server
      uses: oven-sh/setup-bun@v2

    - name: Cache Bun dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.bun
          bun.lockb
          bun_modules
        key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-
          
    - name: Install dependencies using Bun
      run: bun install

    # - name: Build the project using Bun
    #   run: bun run build

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 46.202.163.196 >> ~/.ssh/known_hosts
        # Debug SSH connection
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@46.202.163.196 'echo "SSH connection successful" || exit 1'
        
    # - name: Remove .next cache 
    #   run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@46.202.163.196 'rm -rf /var/www/api.launchyourexchange.com/.next'
    - name: Set Ownership on Target Directory
      run: |
        echo "Setting ownership for /var/www/api.launchyourexchange.com on the server"
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@46.202.163.196 'sudo chown -R ubuntu:ubuntu /var/www/api.launchyourexchange.com'

    # Using rsync for faster and differential file transfer
    - name: Sync files using rsync
      run: |
        echo "Attempting to sync files using rsync"
        rsync -avz --delete --exclude 'node_modules' --exclude '.git' --exclude '.next' --exclude '.github' -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ./ root@46.202.163.196:/var/www/api.launchyourexchange.com || exit 1

    # Alternative option: Using tarball compression if you want to use this instead of rsync
    # Uncomment the following block if you want to use tarball compression instead of rsync
    # - name: Compress files 
    #   run: tar -czf deployment.tar.gz . test 

    # - name: Copy tarball to server
    #   run: scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no deployment.tar.gz root@46.202.163.196:/var/www/api.launchyourexchange.com

    # - name: Extract tarball on server test  
    #   run: |
    #     ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@46.202.163.196 'cd /var/www/api.launchyourexchange.com && tar -xzf deployment.tar.gz && rm deployment.tar.gz'

    # - name: Debug SCP Command 
    #   run: |
    #     echo "Checking current directory"
    #     ls -la
    #     echo "Attempting to copy files"
    #     scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r ./* root@46.202.163.196:/var/www/api.launchyourexchange.com || exit 1
    #     #scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r ./ root@46.202.163.196:/var/www/api.launchyourexchange.com || exit 1
    # Cache clean step (added)
    
    # - name: Clean Nginx Cache
    #   run: |
    #     echo "Cleaning Nginx cache"
    #     ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@46.202.163.196 'sudo rm -rf /var/cache/nginx/* && sudo chown -R www-data:www-data /var/cache/nginx'

    - name: Deploy to AWS
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@46.202.163.196 'cd /var/www/api.launchyourexchange.com && npm install && npm run build && pm2 restart all' || exit 1
